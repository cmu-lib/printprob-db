# Generated by Django 2.2.3 on 2019-07-10 14:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estc', models.CharField(help_text='ESTC identifier', max_length=200, unique=True)),
                ('title', models.CharField(db_index=True, help_text='Title (as cataloged by ESTC)', max_length=1000)),
            ],
            options={
                'ordering': ['estc'],
            },
        ),
        migrations.CreateModel(
            name='CharacterClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classname', models.CharField(help_text='A human-readable, unique class identifier', max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basename', models.CharField(help_text='Standard identifier using the printer/id/location schema, without any filetype name', max_length=500, unique=True)),
            ],
            options={
                'ordering': ['basename'],
            },
        ),
        migrations.CreateModel(
            name='Printer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, default='', help_text='Free-text notes describing the nature of this run', max_length=5000)),
            ],
            options={
                'ordering': ['date_started'],
            },
        ),
        migrations.CreateModel(
            name='Spread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(db_index=True, help_text='Sequence of this page in a given book')),
                ('page_split_x', models.IntegerField(help_text='X-axis index marking the location of the page split on the spread image')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spreads', to='pp.Book')),
                ('images', models.ManyToManyField(related_name='depicted_spreads', to='pp.Image')),
            ],
            options={
                'unique_together': {('book', 'sequence')},
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.CharField(choices=[('l', 'left'), ('r', 'right')], help_text='Side of the spread this has been segmented to', max_length=1)),
                ('x_min', models.IntegerField(help_text='Starting x-axis location of the page on the original spread image')),
                ('x_max', models.IntegerField(help_text='Ending x-axis location of the page on the original spread image')),
                ('created_by_run', models.ForeignKey(help_text='Which pipeline run created this object instance', on_delete=django.db.models.deletion.CASCADE, to='pp.Run')),
                ('images', models.ManyToManyField(related_name='depicted_pages', to='pp.Image')),
                ('spread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='pp.Spread')),
            ],
            options={
                'ordering': ['created_by_run', 'spread', 'side'],
                'unique_together': {('created_by_run', 'spread', 'side')},
            },
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(db_index=True, help_text='Order on page, from top to bottom')),
                ('y_min', models.IntegerField(help_text='Y-axis index for the start of this line on the Page image')),
                ('y_max', models.IntegerField(help_text='Y-axis index for the end of this line on the Page image')),
                ('created_by_run', models.ForeignKey(help_text='Which pipeline run created this object instance', on_delete=django.db.models.deletion.CASCADE, to='pp.Run')),
                ('images', models.ManyToManyField(blank=True, to='pp.Image')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='pp.Page')),
            ],
            options={
                'ordering': ['created_by_run', 'page', 'sequence'],
            },
        ),
        migrations.CreateModel(
            name='ImageFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filetype', models.CharField(choices=[('png', 'png'), ('jpg', 'jpeg'), ('tif', 'tiff'), ('pdf', 'pdf')], help_text='File encoding (e.g. png, jpg, tif...)', max_length=3)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True, help_text='Date this file was added to the server')),
                ('filepath', models.FilePathField(help_text='relative file path to root directory containing all images', path='/vol/images/', recursive=True)),
                ('parent_image', models.ForeignKey(help_text='The image of which this file is one type', on_delete=django.db.models.deletion.CASCADE, related_name='files', to='pp.Image')),
            ],
            options={
                'ordering': ['image', 'date_uploaded'],
                'unique_together': {('parent_image', 'filetype')},
            },
        ),
        migrations.AddField(
            model_name='image',
            name='created_by_run',
            field=models.ForeignKey(help_text='Which pipeline run created this object instance', on_delete=django.db.models.deletion.CASCADE, to='pp.Run'),
        ),
        migrations.AddField(
            model_name='image',
            name='web_file',
            field=models.OneToOneField(blank=True, help_text='direct pointer to the path of the JPG version of this image, if it exists', limit_choices_to={'filetype': 'jpg'}, null=True, on_delete=django.db.models.deletion.PROTECT, to='pp.ImageFile'),
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(db_index=True, help_text='Sequence of characters on the line')),
                ('x_min', models.IntegerField(help_text='X-axis index for the start of this character on the line image')),
                ('x_max', models.IntegerField(help_text='X-axis index for the end of this character on the line image')),
                ('created_by_run', models.ForeignKey(help_text='Which pipeline run created this object instance', on_delete=django.db.models.deletion.CASCADE, to='pp.Run')),
                ('images', models.ManyToManyField(blank=True, related_name='characters', to='pp.Image')),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='pp.Line')),
            ],
            options={
                'ordering': ['created_by_run', 'line', 'sequence'],
                'unique_together': {('created_by_run', 'line', 'sequence')},
            },
        ),
        migrations.AddField(
            model_name='book',
            name='cataloged_printers',
            field=models.ManyToManyField(help_text='The printers of this book according to ESTC cataloging', related_name='books_printed', to='pp.Printer'),
        ),
        migrations.AddField(
            model_name='book',
            name='pdf',
            field=models.ForeignKey(blank=True, limit_choices_to={'filetype': 'pdf'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='book_depicted', to='pp.ImageFile'),
        ),
        migrations.CreateModel(
            name='BadCapture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_entered', models.DateTimeField(auto_now=True, help_text='Date this classification was made')),
                ('image', models.OneToOneField(help_text='The image being classified as a poor segmentation', on_delete=django.db.models.deletion.CASCADE, related_name='good_capture', to='pp.Image')),
            ],
            options={
                'ordering': ['date_entered'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProposedBookLineHeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_height', models.IntegerField(help_text='Proposed line height for a book')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposed_line_heights', to='pp.Book')),
                ('created_by_run', models.ForeignKey(help_text='Which pipeline run created this object instance', on_delete=django.db.models.deletion.CASCADE, to='pp.Run')),
            ],
            options={
                'unique_together': {('book', 'created_by_run')},
            },
        ),
        migrations.CreateModel(
            name='ClassAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_probability', models.FloatField()),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_assignments', to='pp.Character')),
                ('character_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_assignments', to='pp.CharacterClass')),
                ('created_by_run', models.ForeignKey(help_text='Which pipeline run created this object instance', on_delete=django.db.models.deletion.CASCADE, to='pp.Run')),
            ],
            options={
                'ordering': ['created_by_run__date_started'],
                'unique_together': {('created_by_run', 'character', 'character_class')},
            },
        ),
    ]
